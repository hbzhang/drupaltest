<?php
/**
 * @file
 *  Module code to create shifts and events to signup for using the Admin UI.
 */

/**
 * Implements hook_menu().
 */
function cck_signup_events_menu() {
  $items = array();

  $items['admin/structure/cck-signup-events'] = array(
    'title' => 'Signup Event Types',
    'access arguments' => array('administer cck_signup_events'),
    'page callback' => 'cck_signup_events_types_page',
  );
  $items['admin/structure/cck-signup-events/create'] = array(
    'title' => 'Add a Signup Event',
    'access arguments' => array('administer cck_signup_events'),
    'page callback' => 'cck_signup_events_add_event',
    'type' => MENU_LOCAL_ACTION,
  );
  $items['admin/structure/cck-signup-events/status/%'] = array(
    'title' => 'Change Status of Event',
    'access arguments' => array('administer cck_signup_events'),
    'page callback' => 'cck_signup_events_status',
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function cck_signup_events_permission() {
  return array(
    'administer cck_signup_events' => array(
      'title' => t('Administer Signup Event types'),
      'description' => t('Create and disable Signup Event types'),
      'restrict access' => TRUE,
    ),
  );
}

function cck_signup_events_types_page() {
  $header = array(t('Name'), t('Operations'));
  $rows = array();
  foreach (cck_signup_events_get_shifts(TRUE) as $shift) {
    $links = array(
      'edit' => array(
        'title' => 'edit',
        'href' => 'admin/structure/types/manage/' . $shift->type,
      ),
      'manage fields' => array(
        'title' => 'manage fields',
        'href' => 'admin/structure/types/manage/' . $shift->$type . '/fields',
      ),
      'manage display' => array(
        'title' => 'manage display',
        'href' => 'admin/structure/types/manage/' . $shift->$type . '/display',
      ),
      'status' => array(
        'title' => 'enable/disable',
        'href' => 'admin/structure/cck-signup-events/status/' . $shift->$type,
      ),
    );
    $rows[] = array(
      theme('cck_signup_events_type', array('type' => $shift)),
      theme('links', array('links' => $links, 'attributes' => array('class' => 'links inline operations'))),
    );
  }
  if (empty($rows)) {
    $rows[] = array(
      array(
        'data' => t('There are no signup event types yet. <a href="@link">Add a Registration Type</a>', array('@link' => url('admin/structure/cck-signup-events/create'))),
        'colspan' => 2,
      ),
    );
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}

function cck_signup_events_theme() {
  return array(
    'cck_signup_events_type' => array(
      'arguments' => array('shift' => NULL),
    ),
  );
}

/**
 * Themes a specific signup event type row.
 */
function theme_cck_signup_events_type($variables) {
  $type = $variables['type'];

  $output = check_plain($type->name);
  $output .= ' <small> (Machine name: ' . check_plain($type->type) . ')</small>';
  $output .= '<div class="description">' . filter_xss_admin($type->description) . '</div>';

  return $output;
}

function _cck_signup_events_create_shift($shift)
{
  $info = (object) array(
    'type' => $shift->type,
    'name' => $shift->name,
    'base' => 'node_content',
    'description' => 'A volunteer shift for an event.',
    'module' => 'cck_signup_events',
  );
  node_type_save($info);
  $info_signup = (object) array(
    'type' => $shift->type . '_signup',
    'name' => $shift->name .  ' Signup',
    'base' => 'node_content',
    'description' => 'A volunteer signup for an event.',
    'module' => 'cck_signup_events',
  );
  node_type_save($info_signup);
}

function cck_signup_events_get_shifts($show_signup_type = FALSE) {
  $q = db_select('node_type', 'nt')
    ->fields('nt')
    ->orderBy('name', 'ASC')
    ->condition('module', 'cck_signup_events');
  if (!$show_signup_type) {
    $q->condition('type', '%_signup', 'NOT LIKE');
  }
  return $q->execute();
}

/**
 * Implementation of hook_field_default_fields().
 */
function cck_signup_events_field_default_fields() {
  $fields = array();

  foreach (cck_signup_events_get_shifts() as $shift) {
    // Exported field: 'node-event-body'
    $fields['node-' . $shift->type . '-body'] = array(
      'field_config' => array(
        'active' => '1',
        'cardinality' => '1',
        'deleted' => '0',
        'entity_types' => array(
          '0' => 'node',
        ),
        'field_name' => 'body',
        'foreign keys' => array(
          'format' => array(
            'columns' => array(
              'format' => 'format',
            ),
            'table' => 'filter_format',
          ),
        ),
        'indexes' => array(
          'format' => array(
            '0' => 'format',
          ),
        ),
        'module' => 'text',
        'settings' => array(),
        'translatable' => '1',
        'type' => 'text_with_summary',
      ),
      'field_instance' => array(
        'bundle' => 'event',
        'default_value' => NULL,
        'deleted' => '0',
        'description' => '',
        'display' => array(
          'default' => array(
            'label' => 'hidden',
            'module' => 'text',
            'settings' => array(),
            'type' => 'text_default',
            'weight' => 0,
          ),
          'teaser' => array(
            'label' => 'hidden',
            'module' => 'text',
            'settings' => array(
              'trim_length' => 600,
            ),
            'type' => 'text_summary_or_trimmed',
            'weight' => 0,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'body',
        'label' => 'Body',
        'required' => FALSE,
        'settings' => array(
          'display_summary' => TRUE,
          'text_processing' => 1,
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'module' => 'text',
          'settings' => array(
            'rows' => 20,
            'summary_rows' => 5,
          ),
          'type' => 'text_textarea_with_summary',
          'weight' => '3',
        ),
        'widget_type' => 'text_textarea_with_summary',
      ),
    );

    // Exported field: 'node-event-field_event_capacity'
    $fields['node-' . $shift->type . '-field_event_capacity'] = array(
      'field_config' => array(
        'active' => '1',
        'cardinality' => '1',
        'deleted' => '0',
        'entity_types' => array(),
        'field_name' => 'field_event_capacity',
        'foreign keys' => array(),
        'indexes' => array(),
        'module' => 'number',
        'settings' => array(),
        'translatable' => '1',
        'type' => 'number_integer',
      ),
      'field_instance' => array(
        'bundle' => 'event',
        'default_value' => NULL,
        'deleted' => '0',
        'description' => 'Limit the number of signups for this event.',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'module' => 'number',
            'settings' => array(
              'decimal_separator' => '.',
              'prefix_suffix' => TRUE,
              'scale' => 0,
              'thousand_separator' => ' ',
            ),
            'type' => 'number_integer',
            'weight' => 2,
          ),
          'teaser' => array(
            'label' => 'above',
            'settings' => array(),
            'type' => 'hidden',
            'weight' => 0,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_event_capacity',
        'label' => 'Event capacity',
        'required' => 1,
        'settings' => array(
          'max' => '',
          'min' => '0',
          'prefix' => '',
          'suffix' => '',
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'active' => 0,
          'module' => 'number',
          'settings' => array(),
          'type' => 'number',
          'weight' => '2',
        ),
      ),
    );

    // Exported field: 'node-event-field_event_date'
    $fields['node-' . $shift->type . '-field_event_date'] = array(
      'field_config' => array(
        'active' => '1',
        'cardinality' => '1',
        'deleted' => '0',
        'entity_types' => array(),
        'field_name' => 'field_event_date',
        'foreign keys' => array(),
        'indexes' => array(),
        'module' => 'date',
        'settings' => array(
          'granularity' => array(
            'day' => 'day',
            'hour' => 'hour',
            'minute' => 'minute',
            'month' => 'month',
            'year' => 'year',
          ),
          'repeat' => 0,
          'timezone_db' => 'UTC',
          'todate' => 'optional',
          'tz_handling' => 'site',
        ),
        'translatable' => '1',
        'type' => 'datetime',
      ),
      'field_instance' => array(
        'bundle' => 'event',
        'deleted' => '0',
        'description' => '',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'module' => 'date',
            'settings' => array(
              'format_type' => 'long',
              'fromto' => 'both',
              'multiple_from' => '',
              'multiple_number' => '',
              'multiple_to' => '',
              'show_repeat_rule' => 'show',
            ),
            'type' => 'date_default',
            'weight' => 1,
          ),
          'teaser' => array(
            'label' => 'above',
            'settings' => array(),
            'type' => 'hidden',
            'weight' => 0,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_event_date',
        'label' => 'Date',
        'required' => 1,
        'settings' => array(
          'default_format' => 'medium',
          'default_value' => 'now',
          'default_value2' => 'blank',
          'default_value_code' => '',
          'default_value_code2' => '',
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'active' => 1,
          'module' => 'date',
          'settings' => array(
            'increment' => '1',
            'input_format' => 'm/d/Y - H:i:s',
            'input_format_custom' => '',
            'label_position' => 'above',
            'repeat_collapsed' => 0,
            'text_parts' => array(),
            'year_range' => '-3:+3',
          ),
          'type' => 'date_text',
          'weight' => '1',
        ),
      ),
    );

    // Exported field: 'node-signup-field_event_signup'
    $fields['node-' . $shift->type . '-signup-field_event_signup'] = array(
      'field_config' => array(
        'active' => '1',
        'cardinality' => '1',
        'deleted' => '0',
        'entity_types' => array(),
        'field_name' => 'field_event_signup',
        'foreign keys' => array(
          'nid' => array(
            'columns' => array(
              'nid' => 'nid',
            ),
            'table' => 'node',
          ),
        ),
        'indexes' => array(
          'nid' => array(
            '0' => 'nid',
          ),
        ),
        'module' => 'node_reference',
        'settings' => array(
          'referenceable_types' => array(
            $shift->type => $shift->type,
          ),
        ),
        'translatable' => '1',
        'type' => 'node_reference',
      ),
      'field_instance' => array(
        'bundle' => 'signup',
        'default_value' => NULL,
        'deleted' => '0',
        'description' => '',
        'display' => array(
          'default' => array(
            'label' => 'above',
            'module' => 'node_reference',
            'settings' => array(),
            'type' => 'node_reference_default',
            'weight' => 1,
          ),
          'teaser' => array(
            'label' => 'above',
            'settings' => array(),
            'type' => 'hidden',
            'weight' => 0,
          ),
        ),
        'entity_type' => 'node',
        'field_name' => 'field_event_signup',
        'label' => 'Event',
        'required' => 1,
        'settings' => array(
          'user_register_form' => FALSE,
        ),
        'widget' => array(
          'active' => 1,
          'module' => 'nodereference_url',
          'settings' => array(
            'fallback' => 'page_not_found',
            'node_link' => array(
              'destination' => 'node',
              'full' => 1,
              'hover_title' => 'Signup for this event',
              'teaser' => 1,
              'title' => 'Signup',
            ),
          ),
          'type' => 'nodereference_url',
          'weight' => '1',
        ),
      ),
    );
  }

  return $fields;
}